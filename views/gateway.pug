extends layout

block scripts
    //- script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js')
    //-script(src='/javascripts/socket.io.js') now try from the server exposed bundle for v4
    script(src='/socket.io/socket.io.js')
    script(src='/javascripts/socketwork.js')

block title
  h4.my-0.py-0= siteName + ' :: Gateway'
  p(class='py-0 my-0 small text-muted') Water Agua L'Eau 

block content
  #setDigitalIoByApi(class='card pl-2')
    h4 Water Controls by DIO Pin State

    div.form-group
      p.small
        | Available Radio MAC IDs from Node Discover or Database which
        | defaults to loading the database values on socket connect:
      div.form-inline
        div#macIdsSel
          select#macIdsSelSel(name="macIdsSelSel" class="form-control form-control-lg")
            option(value=-1) #{"Please run node discover"}
        label.pl-1(for='setDigitalIoByApiMacIdInputTxt') Radio MAC ID:
          input#setDigitalIoByApiMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp' name='setDigitalIoByApiMacIdInputTxt')
        div#serial-port-status(style="padding:8px; font-weight:bold; color:gray;")
          span#serial-port-status-indicator.badge.rounded-circle(
            style="display:inline-block; width:30px; height:30px; margin-left:8px; background-color:gray;"
            title="Serial Port Status Unknown"
          )

      div(class='card mt-3')
        div(class='card-body')
          h4(class='card-title')
            Stored Watering Circuits
          p(class='card-text')
            |Water for [mins] 
            input#waterCycleDurationMinutesTxt(type='text', placeholder='120', class='m-0') 
            div#storedWateringCircuitsHeaderDiv
            div#storedWateringCircuitsDiv

      div(class='card p-2')
        div(class='card-body')
          h3(class='card-title')
            Pin State Controls

          p(class='card-text')
            label(for='setDigitalIoByApiPinNumberInputTxt') Pin Number (Base 0):
            input#setDigitalIoByApiPinNumberInputTxt.form-control(type='text', placeholder='0' name='setDigitalIoByApiPinNumberInputTxt')

            label(for='setDigitalIoByApiPinStateInputTxt') Pin State (Function depends on radio configuration and type):
            input#setDigitalIoByApiPinStateInputTxt.form-control(type='text', placeholder='0' name='setDigitalIoByApiPinStateInputTxt')

            div(class='ctrls-with-margins')
              div#getDioPinStateContainer
                | State for selected pin:
                div#getDioPinState(style={display: 'none'})

              button#setDigitalIoByApiInputBtn.btn.btn-primary
                | Set Digital IO Pin State

              button#getDigitalIoByApiInputBtn.btn.btn-primary
                | Get Digital IO Pin State

              button#reconnectSocketBtn.btn.btn-primary
                | Reconnect Socket

            div(class='card mt-3')
              div(class='card-body')
                h4(class='card-title')
                  Timed Pin Set &amp; Reset
                p(class='card-text')
                  div.input-group.mb-1
                    div.input-group-prepend
                      span#basic-addon1(class='input-group-text')
                        | Select Duration
                    div#pinCycleDurationMinutesDiv
                      select#pinCycleDurationMinutesSel.custom-select(name="pinCycleDurationMinutesSel")
                        option(value=-1) #{"None"}
                        option(value=0) #{"Immediate"}
                        option(value=20) #{"20 Minutes"}
                        option(value=60) #{"1 Hour"}
                        option(value=90) #{"1-1/2 Hour"}
                  div(class='input-group mb-1')
                    div(class='input-group-prepend')
                      span#basic-addon2(class='input-group-text')
                        | On Duration [minutes]
                    input#pinCycleDurationMinutesTxt(type='text', placeholder='20', class='m-0')
                  button#timedPinCycleBtn.btn.btn-primary.mb-1
                    | Timed Pin Set and Reset

  h2 Serial Port Socket Status and Log
  pre#connection
  pre#statuslog(class='preserve-whitespace pre-scrollable')
    |Status Log<br>


  div(class='card pl-2')
    h2 MAC IDs
    h3 of Available PAN XBee Radios from ND
    h4 (This will populate the MAC ID select)
    div#macIds(style={display: 'none'})
      |(Run Node Discover to Populate This Section)
    div(class="ctrls-with-margins")
      button#doNodeDiscover.btn.btn-primary
        | Node Discover
      button#storeNdRadiosInDb.btn.btn-primary
        | Store ND Radios in Database


  div(class='card pl-2')
    h2 MAC IDs
    h3 of PAN XBee Radios in Database
    div#macIdsFromDb(style={display: 'none'})
      |(Run DB Read to Populate This Section)
    div(class="ctrls-with-margins")
      button#getDbRadioMacIds.btn.btn-primary
        | Get Database Radio MAC IDs
      button#popDbRadioMacIds.btn.btn-primary
        | Populate Db Radio MAC IDs (into Radio select drop-down)


  h2 Gateway Radio Setup and PAN Utilities
  //- https://teamtreehouse.com/library/creating-a-registration-form-with-pug-jade-2
  div(class='ctrls-with-margins')

    button#getGatewayRadioMacIdInfo.btn.btn-primary
      | Get Gateway Radio MAC ID

    button#getGatewayRadioSerialLinkDestinationMacIdInfo.btn.btn-primary
      | Get Serial Destination Radio Mac ID

    button#getGatewayRadioDios.btn.btn-primary
      | Get Gateway Radio DIOs

    br
    div.form-group
      input#remoteRadioMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp')
      button#getRemoteRadioDios.btn.btn-primary
        | Get Remote Radio DIOs


    #setDestinationRadioMacId
      h3 Set Destination Radio MAC ID
      p This has not bearing on setting digital (GPIO) pin states or functions because that is sent via API command (see below)
      div.form-group
        label(for='setDestinationRadioMacIdInputTxt') ATDH/L:
        input#setDestinationRadioMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp' name='setDestinationRadioMacIdInputTxt')
        button#setDestinationRadioMacIdInputBtn.btn.btn-primary
          | Set Destination Radio MAC ID





  h2 Serial Port List
  h3 Available serial ports on this gateway
  pre
    p= serialPortList
  h3 Port to use:
  pre
    p= serialPortToUse
  h3 Port after init:
  pre(class='preserve-whitespace pre-scrollable small')
    p= JSON.stringify(port)



  h2 Developer Resources
  ul
    li
      a(href='https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Template_primer') NodeJS Mozilla on Templates (pug)
    li
      a(href='https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Home_page') Node.js Mozilla on putting data into templates and pages
    li
      a(href='http://theholmesoffice.com/getting-ready-for-scalability-creating-an-mvc-framework-for-our-node-js-page/') Holmes Office on basic MVC with Node.js including a static model for simple test data
    li
      a(href='https://www.npmjs.com/package/serialport') Node.js npm serialport package
    li
      a(href='http://helloraspberrypi.blogspot.com/2014/03/nodejssocketioserialport-web-app-to.html') RaspPi Socket.io Node.js etc.
    li
      a(href='http://danialk.github.io/blog/2014/04/26/arduino-and-processingjs-and-socketio-in-action/') Arduino Node.js and Socket.io

  h2 Serial Port Access
  p.
    You may need to make sure that the user running the Node.js process(es) has permissions to access the serial port.  See e.g. #[a(href='https://help.ubuntu.com/community/SerialConsoleHowto') Ubuntu on Serial Port access] about user and group access checks and updates.  For the Ubuntu 16.nnnnn installation here, during initial development, the following was needed:

  pre
    |ls /dev/ttyUSB0 (ok)
    br
    |id -Gn |grep dialout (no output ... need to add user)
    br
    |sudo adduser $USER dialout

  p and then log out and back in again, and now, yes, running the server, no console output indicating failed permissions on the port (check with #[code id -Gn] again


  h2 Rapid Site Update Hints
  p To add a ...
  ol
    li
    li


  script(type="text/javascript").
    function macIdsSelFcn() {
      var sel = $('select[name="macIdsSelSel"]');
      var inp = $('input[name="setDigitalIoByApiMacIdInputTxt"]');
      var newMac = sel.val();
      inp.val(newMac);
      //testFunction(newMac); // adding to populate eg watering circuits stored
      //console.log(socket);
      socket.emit('client_load_radio_data', newMac);
    }

    function pinCycleDurationMinutesFcn() {
      var sel = $('select[name="pinCycleDurationMinutesSel"]');
      var inp = $('input[id="pinCycleDurationMinutesTxt"]');
      var pinDur = sel.val();
      inp.val(pinDur);
    }
    
    function waterCycle(macId, pin, onstate, offstate) {
      var inp = $('input[id="waterCycleDurationMinutesTxt"]');
      socket.emit('client_set_digital_io_with_timed_reset_known_state_values', macId, pin, onstate, inp.val(), offstate);
    }

    var gatewaySocket = io('/gateway');
    gatewaySocket.on('serialport_status', function(data) {
      var indicator = document.getElementById('serial-port-status-indicator');
      if (!indicator) return;
      if (data.status === 'open') {
        indicator.style.backgroundColor = 'green';
        indicator.title = 'Serial port open';
      } else if (data.status === 'error') {
        indicator.style.backgroundColor = 'red';
        indicator.title = 'Serial port error';
      } else {
        indicator.style.backgroundColor = 'orange';
        indicator.title = 'Serial port not open';
      }
    });

    gatewaySocket.emit('get_serialport_status');

