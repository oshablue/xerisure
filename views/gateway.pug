extends layout

block scripts
    script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.1.1/socket.io.js')
    script(src='/javascripts/socketwork.js')

block title
  h1= siteName + ' :: Gateway'
  p Welcome to the #{siteName} Gateway Page
  p This page shows information about the gateway that controls communications to all of the sensor monitoring nodes.  You might have one or many gateways.  At this time, this is a single gateway that control your local sensor network.


block content
  
  h2 Serial Port Socket Status and Log
  pre#connection
  pre#statuslog(class='preserve-whitespace pre-scrollable')
    |Status Log<br>

  div(class='card pl-2')
    h2 MAC IDs 
    h3 of Available PAN XBee Radios from ND
    div#macIds(style={display: 'none'})
      |(Run Node Discover to Populate This Section)
    

  h2 Gateway Radio Setup and PAN Utilities
  //- https://teamtreehouse.com/library/creating-a-registration-form-with-pug-jade-2
  div(class='ctrls-with-margins')

    button#getGatewayRadioMacIdInfo.btn.btn-primary
      | Get Gateway Radio MAC ID

    button#getGatewayRadioSerialLinkDestinationMacIdInfo.btn.btn-primary
      | Get Serial Destination Radio Mac ID

    button#doNodeDiscover.btn.btn-primary
      | Node Discover

    button#getGatewayRadioDios.btn.btn-primary
      | Get Gateway Radio DIOs

    br
    div.form-group
      input#remoteRadioMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp')
      button#getRemoteRadioDios.btn.btn-primary
        | Get Remote Radio DIOs


    #setDestinationRadioMacId
      h3 Set Destination Radio MAC ID
      p This has not bearing on setting digital (GPIO) pin states or functions because that is sent via API command (see below)
      div.form-group
        label(for='setDestinationRadioMacId') ATDH/L:
        input#setDestinationRadioMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp' name='setDestinationRadioMacIdInputTxt')
        button#setDestinationRadioMacIdInputBtn.btn.btn-primary
          | Set Destination Radio MAC ID

    #setDigitalIoByApi
      h3 Set Digital IO Pin State by API Packet
      p This tells the state to place the destination radio's pin

      div.form-group
        label(for='setDigitalIoByApiMacId') Radio MAC ID:
        input#setDigitalIoByApiMacIdInputTxt.form-control(type='text', placeholder='0013A200 40nnmmpp' name='setDigitalIoByApiMacIdInputTxt')

        label(for='setDigitalIoByApiPinNumberInputTxt') Pin Number (Base 0):
        input#setDigitalIoByApiPinNumberInputTxt.form-control(type='text', placeholder='0' name='setDigitalIoByApiPinNumberInputTxt')

        label(for='setDigitalIoByApiPinStateInputTxt') Pin State (Function depends on radio configuration and type):
        input#setDigitalIoByApiPinStateInputTxt.form-control(type='text', placeholder='0' name='setDigitalIoByApiPinStateInputTxt')

        button#setDigitalIoByApiInputBtn.btn.btn-primary
          | Set Digital IO Pin State
      


  h2 Serial Port List
  h3 Available serial ports on this gateway
  pre
    p= serialPortList
  h3 Port to use:
  pre  
    p= serialPortToUse
  h3 Port after init:
  pre(class='preserve-whitespace pre-scrollable small')
    p= JSON.stringify(port)



  h2 Developer Resources
  ul
    li 
      a(href='https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Template_primer') NodeJS Mozilla on Templates (pug)
    li 
      a(href='https://developer.mozilla.org/en-US/docs/Learn/Server-side/Express_Nodejs/Displaying_data/Home_page') Node.js Mozilla on putting data into templates and pages
    li
      a(href='http://theholmesoffice.com/getting-ready-for-scalability-creating-an-mvc-framework-for-our-node-js-page/') Holmes Office on basic MVC with Node.js including a static model for simple test data
    li
      a(href='https://www.npmjs.com/package/serialport') Node.js npm serialport package
    li
      a(href='http://helloraspberrypi.blogspot.com/2014/03/nodejssocketioserialport-web-app-to.html') RaspPi Socket.io Node.js etc.
    li
      a(href='http://danialk.github.io/blog/2014/04/26/arduino-and-processingjs-and-socketio-in-action/') Arduino Node.js and Socket.io

  h2 Serial Port Access
  p. 
    You may need to make sure that the user running the Node.js process(es) has permissions to access the serial port.  See e.g. #[a(href='https://help.ubuntu.com/community/SerialConsoleHowto') Ubuntu on Serial Port access] about user and group access checks and updates.  For the Ubuntu 16.nnnnn installation here, during initial development, the following was needed:
  
  pre
    |ls /dev/ttyUSB0 (ok)
    br
    |id -Gn |grep dialout (no output ... need to add user)
    br
    |sudo adduser $USER dialout

  p and then log out and back in again, and now, yes, running the server, no console output indicating failed permissions on the port (check with #[code id -Gn] again


  h2 Rapid Site Update Hints
  p To add a ...
  ol
    li
    li

    

    

